{"ast":null,"code":"var _jsxFileName = \"/home/eric-cruz/Desktop/VS/Senior-HR/FEC/project-catwalk/client/src/qa-components/Answers.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Grid } from '@material-ui/core';\nimport _ from 'underscore';\nimport axios from 'axios';\nimport HelpfulAnswerHandler from './HelpfulAndReport/HelpfulAnswerHandler.jsx';\nimport MoreAnswersButton from './MoreAnswersButton.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Answers = ({\n  question_id,\n  toggleAnswerReload\n}) => {\n  _s();\n\n  const [answers, setAnswers] = useState([]);\n  const [displayedAnswers, setDisplayedAnswers] = useState([]);\n  const [answersCount, setAnswersCount] = useState(2);\n  const [answerToggle, setAnswerToggle] = useState(true);\n  useEffect(() => {\n    axios.get(`http://127.0.0.1:3004/qa/questions/${question_id}/answers`, {\n      params: {\n        question_id: question_id,\n        count: 1000\n      }\n    }).then(answers => {\n      setAnswers(answers.data.results);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [question_id, answerToggle]);\n  useEffect(() => {\n    setAnswerToggle(toggleAnswerReload);\n  }, [toggleAnswerReload]);\n  useEffect(() => {\n    setDisplayedAnswers(answers.slice(0, answersCount));\n  }, [answers, answersCount]);\n\n  const handleLoadMoreClick = event => {\n    setAnswersCount(answersCount + 2);\n  };\n\n  const handleCollapseClick = event => {\n    setAnswersCount(2);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      children: _.map(displayedAnswers, answer => /*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(HelpfulAnswerHandler, {\n            answer: answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, answer.answer_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), answers.length > 0 && answers.length !== displayedAnswers.length ? /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(MoreAnswersButton, {\n        text: \"Load more answers\",\n        handleClick: handleLoadMoreClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this) : answers.length > 2 && /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(MoreAnswersButton, {\n        text: \"Collapse answers\",\n        handleClick: handleCollapseClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Answers, \"Gyr9+EQT/++8AAPUFn0HY92PLP4=\");\n\n_c = Answers;\nexport default Answers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Answers\");","map":{"version":3,"sources":["/home/eric-cruz/Desktop/VS/Senior-HR/FEC/project-catwalk/client/src/qa-components/Answers.jsx"],"names":["useState","useEffect","Grid","_","axios","HelpfulAnswerHandler","MoreAnswersButton","Answers","question_id","toggleAnswerReload","answers","setAnswers","displayedAnswers","setDisplayedAnswers","answersCount","setAnswersCount","answerToggle","setAnswerToggle","get","params","count","then","data","results","catch","err","console","log","slice","handleLoadMoreClick","event","handleCollapseClick","map","answer","answer_id","length"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Grid } from '@material-ui/core';\nimport _ from 'underscore';\nimport axios from 'axios';\nimport HelpfulAnswerHandler from './HelpfulAndReport/HelpfulAnswerHandler.jsx';\nimport MoreAnswersButton from './MoreAnswersButton.jsx';\n\nconst Answers = ({ question_id, toggleAnswerReload }) => {\n  const [answers, setAnswers] = useState([]);\n  const [displayedAnswers, setDisplayedAnswers] = useState([]);\n  const [answersCount, setAnswersCount] = useState(2);\n  const [answerToggle, setAnswerToggle] = useState(true);\n\n  useEffect(() => {\n    axios.get(`http://127.0.0.1:3004/qa/questions/${question_id}/answers`, {\n      params: {\n        question_id: question_id,\n        count: 1000\n      }\n    })\n      .then(answers => {\n        setAnswers(answers.data.results);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }, [question_id, answerToggle]);\n\n  useEffect(() => {\n    setAnswerToggle(toggleAnswerReload);\n  }, [toggleAnswerReload])\n\n  useEffect(() => {\n    setDisplayedAnswers(answers.slice(0, answersCount));\n  }, [answers, answersCount])\n\n  const handleLoadMoreClick = (event) => {\n    setAnswersCount(answersCount + 2);\n  };\n\n  const handleCollapseClick = (event) => {\n    setAnswersCount(2);\n  };\n\n  return (\n    <Grid>\n      <Grid>\n        {_.map(displayedAnswers, answer =>\n          <Grid key={answer.answer_id}>\n            <Grid>\n              <HelpfulAnswerHandler answer={answer}/>\n            </Grid>\n          </Grid>\n        )}\n      </Grid>\n      { answers.length > 0 && answers.length !== displayedAnswers.length\n        ? <Grid>\n          <MoreAnswersButton text=\"Load more answers\" handleClick={handleLoadMoreClick} />\n        </Grid>\n        : answers.length > 2 &&\n        <Grid>\n          <MoreAnswersButton text=\"Collapse answers\" handleClick={handleCollapseClick} />\n        </Grid>\n      }\n    </Grid>\n  )\n}\n\nexport default Answers;"]},"metadata":{},"sourceType":"module"}