{"ast":null,"code":"import _slicedToArray from\"/home/eric-cruz/Desktop/VS/Senior-HR/FEC/project-catwalk/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import axios from'axios';import{Typography}from'@material-ui/core';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ReportAnswer=function ReportAnswer(_ref){var answer_id=_ref.answer_id;var _useState=useState('Report'),_useState2=_slicedToArray(_useState,2),reportText=_useState2[0],setReportText=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isClicked=_useState4[0],setIsClicked=_useState4[1];var url=\"http://127.0.0.1:3004/qa/answers/\".concat(answer_id,\"/report\");var headersAndParams={params:{answer_id:answer_id}};var handleReport=function handleReport(event){if(!isClicked){axios.put(url,{report:true},headersAndParams).then(function(response){setIsClicked(true);setReportText('Reported');}).catch(function(err){console.log(err,'error marking answer as reported');});}};return/*#__PURE__*/_jsxs(Typography,{style:{color:\"grey\",fontSize:12,cursor:\"pointer\"},children:[\"\\xA0\\xA0\\xA0\",/*#__PURE__*/_jsx(\"u\",{onClick:handleReport,children:reportText})]});};export default ReportAnswer;","map":{"version":3,"sources":["/home/eric-cruz/Desktop/VS/Senior-HR/FEC/project-catwalk/client/src/qa-components/HelpfulAndReport/ReportAnswer.jsx"],"names":["React","useState","axios","Typography","ReportAnswer","answer_id","reportText","setReportText","isClicked","setIsClicked","url","headersAndParams","params","handleReport","event","put","report","then","response","catch","err","console","log","color","fontSize","cursor"],"mappings":"+KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,mBAA3B,C,wFAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAmB,IAAhBC,CAAAA,SAAgB,MAAhBA,SAAgB,eACFJ,QAAQ,CAAC,QAAD,CADN,wCAC/BK,UAD+B,eACnBC,aADmB,8BAEJN,QAAQ,CAAC,KAAD,CAFJ,yCAE/BO,SAF+B,eAEpBC,YAFoB,eAItC,GAAMC,CAAAA,GAAG,4CAAuCL,SAAvC,WAAT,CACA,GAAMM,CAAAA,gBAAgB,CAAG,CACvBC,MAAM,CAAE,CAAEP,SAAS,CAAEA,SAAb,CADe,CAAzB,CAIA,GAAMQ,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC9B,GAAI,CAACN,SAAL,CAAgB,CACdN,KAAK,CAACa,GAAN,CAAUL,GAAV,CAAe,CAAEM,MAAM,CAAE,IAAV,CAAf,CAAiCL,gBAAjC,EACGM,IADH,CACQ,SAAAC,QAAQ,CAAI,CAChBT,YAAY,CAAC,IAAD,CAAZ,CACAF,aAAa,CAAC,UAAD,CAAb,CACD,CAJH,EAKGY,KALH,CAKS,SAAAC,GAAG,CAAI,CACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAiB,kCAAjB,EACD,CAPH,EAQD,CACF,CAXD,CAaA,mBACE,MAAC,UAAD,EAAY,KAAK,CAAE,CAACG,KAAK,CAAE,MAAR,CAAgBC,QAAQ,CAAE,EAA1B,CAA8BC,MAAM,CAAE,SAAtC,CAAnB,uCAEE,UAAG,OAAO,CAAEZ,YAAZ,UAA2BP,UAA3B,EAFF,GADF,CAMD,CA5BD,CA8BA,cAAeF,CAAAA,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Typography } from '@material-ui/core';\n\nconst ReportAnswer = ({ answer_id }) => {\n  const [reportText, setReportText] = useState('Report');\n  const [isClicked, setIsClicked] = useState(false);\n\n  const url = `http://127.0.0.1:3004/qa/answers/${answer_id}/report`;\n  const headersAndParams = {\n    params: { answer_id: answer_id }\n  };\n\n  const handleReport = (event) => {\n    if (!isClicked) {\n      axios.put(url, { report: true }, headersAndParams)\n        .then(response => {\n          setIsClicked(true);\n          setReportText('Reported');\n        })\n        .catch(err => {\n          console.log(err, 'error marking answer as reported');\n        })\n    }\n  }\n\n  return(\n    <Typography style={{color: \"grey\", fontSize: 12, cursor: \"pointer\"}}>\n      &nbsp;&nbsp;&nbsp;\n      <u onClick={handleReport}>{reportText}</u>\n    </Typography>\n  )\n}\n\nexport default ReportAnswer;"]},"metadata":{},"sourceType":"module"}