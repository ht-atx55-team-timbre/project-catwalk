{"ast":null,"code":"var _jsxFileName = \"/home/eric-cruz/Desktop/VS/Senior-HR/FEC/project-catwalk/client/src/qa-components/AddQuestionAndAnswer/AddQuestion.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Grid, Button, TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Box, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  input: {\n    color: \"#181E34\"\n  }\n}));\n\nconst AddQuestion = ({\n  toggleQuestionReloadOnFormSubmit,\n  product_id,\n  name\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [userQuestion, setUserQuestion] = useState('');\n  const [nickname, setNickname] = useState('');\n  const [email, setEmail] = useState('');\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    const url = `http://127.0.0.1:3004/qa/questions`;\n    const headersAndParams = {\n      params: {\n        body: userQuestion,\n        name: nickname,\n        email: email,\n        product_id: product_id\n      }\n    };\n    axios.post(url, {\n      body: userQuestion,\n      name: nickname,\n      email: email,\n      product_id: product_id\n    }, headersAndParams).then(response => {\n      toggleQuestionReloadOnFormSubmit();\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      mt: 2,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        style: {\n          borderRadius: 0,\n          borderColor: \"red\"\n        },\n        onClick: handleClickOpen,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            fontSize: 14\n          },\n          children: \"Add A Question +\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"form-dialog-title\",\n          children: \"Ask Your Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: [\"About the \", name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            inputProps: {\n              maxLength: 60\n            },\n            autoFocus: true,\n            margin: \"dense\",\n            id: \"user-question\",\n            label: \"Your Question:\",\n            type: \"text\",\n            fullWidth: true,\n            placeholder: \"Ask your question here\",\n            multiline: true,\n            rows: 5,\n            maxrows: 10,\n            variant: \"outlined\",\n            value: userQuestion,\n            onInput: e => setUserQuestion(e.target.value),\n            InputProps: {\n              className: classes.input\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            inputProps: {\n              maxLength: 60\n            },\n            margin: \"dense\",\n            id: \"name\",\n            label: \"Nickname:\",\n            type: \"text\",\n            fullWidth: true,\n            placeholder: \"Example: jackson11!\",\n            variant: \"outlined\",\n            value: nickname,\n            onInput: e => setNickname(e.target.value),\n            InputProps: {\n              className: classes.input\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            inputProps: {\n              maxLength: 60\n            },\n            margin: \"dense\",\n            id: \"email\",\n            label: \"Email Address:\",\n            type: \"text\",\n            fullWidth: true,\n            placeholder: \"Would you like the product or not?\",\n            variant: \"outlined\",\n            value: email,\n            onInput: e => setEmail(e.target.value),\n            InputProps: {\n              className: classes.input\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            onClick: handleClose,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Submit Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddQuestion, \"R5uIELl0i+jxUJ8eRnY4Krsx8pY=\", false, function () {\n  return [useStyles];\n});\n\n_c = AddQuestion;\nexport default AddQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddQuestion\");","map":{"version":3,"sources":["/home/eric-cruz/Desktop/VS/Senior-HR/FEC/project-catwalk/client/src/qa-components/AddQuestionAndAnswer/AddQuestion.jsx"],"names":["React","useState","axios","Grid","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Box","Typography","makeStyles","useStyles","theme","input","color","AddQuestion","toggleQuestionReloadOnFormSubmit","product_id","name","classes","open","setOpen","userQuestion","setUserQuestion","nickname","setNickname","email","setEmail","handleClickOpen","handleClose","handleFormSubmit","event","preventDefault","url","headersAndParams","params","body","post","then","response","catch","err","console","log","borderRadius","borderColor","fontSize","maxLength","e","target","value","className"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport {\n  Grid,\n  Button,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Box,\n  Typography\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  input: {\n    color: \"#181E34\"\n  }\n}));\n\nconst AddQuestion = ({ toggleQuestionReloadOnFormSubmit, product_id, name }) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [userQuestion, setUserQuestion] = useState('');\n  const [nickname, setNickname] = useState('');\n  const [email, setEmail] = useState('');\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    const url = `http://127.0.0.1:3004/qa/questions`;\n    const headersAndParams = {\n      params: {\n        body: userQuestion,\n        name: nickname,\n        email: email,\n        product_id: product_id\n      }\n    };\n\n    axios.post(url, {\n      body: userQuestion,\n      name: nickname,\n      email: email,\n      product_id: product_id },\n      headersAndParams)\n      .then(response => {\n        toggleQuestionReloadOnFormSubmit();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  return (\n    <Grid>\n      <Box mt={2}>\n        <Button\n          variant=\"outlined\"\n          style={{borderRadius: 0, borderColor: \"red\"}}\n          onClick={handleClickOpen}\n        >\n          <Typography style={{fontSize: 14}}>Add A Question +</Typography>\n        </Button>\n      </Box>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <form onSubmit={handleFormSubmit}>\n          <DialogTitle id=\"form-dialog-title\">\n            Ask Your Question\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              About the {name}\n            </DialogContentText>\n            <TextField\n              required\n              inputProps={{maxLength: 60}}\n              autoFocus\n              margin=\"dense\"\n              id=\"user-question\"\n              label=\"Your Question:\"\n              type=\"text\"\n              fullWidth\n              placeholder=\"Ask your question here\"\n              multiline\n              rows={5}\n              maxrows={10}\n              variant=\"outlined\"\n              value={userQuestion}\n              onInput={ e=>setUserQuestion(e.target.value)}\n              InputProps={{className: classes.input}}\n            />\n            <TextField\n              required\n              inputProps={{maxLength: 60}}\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Nickname:\"\n              type=\"text\"\n              fullWidth\n              placeholder=\"Example: jackson11!\"\n              variant=\"outlined\"\n              value={nickname}\n              onInput={ e=>setNickname(e.target.value)}\n              InputProps={{className: classes.input}}\n            />\n            <TextField\n              required\n              inputProps={{maxLength: 60}}\n              margin=\"dense\"\n              id=\"email\"\n              label=\"Email Address:\"\n              type=\"text\"\n              fullWidth\n              placeholder=\"Would you like the product or not?\"\n              variant=\"outlined\"\n              value={email}\n              onInput={ e=>setEmail(e.target.value)}\n              InputProps={{className: classes.input}}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button type=\"submit\" onClick={handleClose}>\n              <Typography>Submit Question</Typography>\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </Grid>\n  );\n}\n\nexport default AddQuestion;"]},"metadata":{},"sourceType":"module"}