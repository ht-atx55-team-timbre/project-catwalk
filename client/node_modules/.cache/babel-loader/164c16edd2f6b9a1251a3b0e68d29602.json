{"ast":null,"code":"var _jsxFileName = \"/home/eric-cruz/Desktop/VS/Senior-HR/FEC/project-catwalk/client/src/qa-components/Questions.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Grid, Box, Typography, Divider } from '@material-ui/core';\nimport axios from 'axios';\nimport _ from 'underscore';\nimport Answers from './Answers.jsx';\nimport HelpfulQuestionHandler from './HelpfulAndReport/HelpfulQuestionHandler';\nimport AddQuestion from './AddQuestionAndAnswer/AddQuestion.jsx';\nimport sortingFunctions from './SortingFunctions.js';\nimport SearchBarComponent from './SearchBarComponent.jsx';\nimport MoreQuestionsButton from './MoreQuestionsButton.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Questions = ({\n  product_id,\n  name\n}) => {\n  _s();\n\n  const [allQuestions, setAllQuestions] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [displayedQuestions, setDisplayedQuestions] = useState([]);\n  const [questionCount, setQuestionCount] = useState(0);\n  const [toggleQuestionReload, setToggleQuestionReload] = useState(true);\n  const [toggleAnswerReload, setToggleAnswerReload] = useState(true);\n  useEffect(() => {\n    axios.get('http://127.0.0.1:3004/qa/questions', {\n      params: {\n        product_id: product_id,\n        count: 1000\n      }\n    }).then(questions => {\n      const sortedByAnswered = sortingFunctions.sortByAnswered(questions.data.results);\n      setAllQuestions(sortedByAnswered);\n      setQuestions(sortedByAnswered);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [product_id, toggleQuestionReload]);\n  useEffect(() => {\n    setQuestionCount(4);\n  }, [product_id]);\n  useEffect(() => {\n    setDisplayedQuestions(questions.slice(0, questionCount));\n  }, [questions, questionCount]);\n\n  const handleMoreClick = event => {\n    setQuestionCount(questionCount + 2);\n  };\n\n  const handleCollapseClick = event => {\n    setQuestionCount(4);\n  };\n\n  const toggleQuestionReloadOnFormSubmit = () => {\n    setToggleQuestionReload(!toggleQuestionReload);\n  };\n\n  const toggleAnswerReloadOnFormSubmit = () => {\n    setToggleAnswerReload(!toggleAnswerReload);\n  };\n\n  const sortQuestionsBySearchTerm = event => {\n    if (event.length > 2) {\n      const filteredQuestions = questions.filter(question => question.question_body.toLowerCase().includes(event.toLowerCase()));\n      setQuestions(filteredQuestions);\n    } else {\n      setQuestions(allQuestions);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: [/*#__PURE__*/_jsxDEV(SearchBarComponent, {\n      sortQuestionsBySearchTerm: sortQuestionsBySearchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        maxHeight: '75vh',\n        overflow: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        children: _.map(displayedQuestions, question => /*#__PURE__*/_jsxDEV(Grid, {\n          children: [question.question_id !== displayedQuestions[0].question_id && /*#__PURE__*/_jsxDEV(Box, {\n            pt: 1.5,\n            children: /*#__PURE__*/_jsxDEV(Divider, {\n              variant: \"middle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 9,\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                pt: 2,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: [\"Q: \", question.question_body]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 34\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                pt: 1.5,\n                children: /*#__PURE__*/_jsxDEV(Answers, {\n                  toggleAnswerReload: toggleAnswerReload,\n                  question_id: question.question_id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 3,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                children: /*#__PURE__*/_jsxDEV(HelpfulQuestionHandler, {\n                  toggleAnswerReloadOnFormSubmit: toggleAnswerReloadOnFormSubmit,\n                  question: question,\n                  name: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, question.question_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      pb: 2,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        children: [questions.length && questions.length !== displayedQuestions.length ? /*#__PURE__*/_jsxDEV(MoreQuestionsButton, {\n          text: \"More Answered Questions\",\n          handleClick: handleMoreClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this) : questions.length > 4 && /*#__PURE__*/_jsxDEV(MoreQuestionsButton, {\n          text: \"Collapse Questions\",\n          handleClick: handleCollapseClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(AddQuestion, {\n          toggleQuestionReloadOnFormSubmit: toggleQuestionReloadOnFormSubmit,\n          product_id: product_id,\n          name: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Questions, \"6HwjAyfZld49iqkhBLndaPD0gk8=\");\n\n_c = Questions;\nexport default Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["/home/eric-cruz/Desktop/VS/Senior-HR/FEC/project-catwalk/client/src/qa-components/Questions.jsx"],"names":["React","useState","useEffect","Grid","Box","Typography","Divider","axios","_","Answers","HelpfulQuestionHandler","AddQuestion","sortingFunctions","SearchBarComponent","MoreQuestionsButton","Questions","product_id","name","allQuestions","setAllQuestions","questions","setQuestions","displayedQuestions","setDisplayedQuestions","questionCount","setQuestionCount","toggleQuestionReload","setToggleQuestionReload","toggleAnswerReload","setToggleAnswerReload","get","params","count","then","sortedByAnswered","sortByAnswered","data","results","catch","err","console","log","slice","handleMoreClick","event","handleCollapseClick","toggleQuestionReloadOnFormSubmit","toggleAnswerReloadOnFormSubmit","sortQuestionsBySearchTerm","length","filteredQuestions","filter","question","question_body","toLowerCase","includes","maxHeight","overflow","map","question_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Grid, Box, Typography, Divider } from '@material-ui/core';\nimport axios from 'axios';\nimport _ from 'underscore';\nimport Answers from './Answers.jsx';\nimport HelpfulQuestionHandler from './HelpfulAndReport/HelpfulQuestionHandler';\nimport AddQuestion from './AddQuestionAndAnswer/AddQuestion.jsx';\nimport sortingFunctions from './SortingFunctions.js';\nimport SearchBarComponent from './SearchBarComponent.jsx';\nimport MoreQuestionsButton from './MoreQuestionsButton.jsx';\n\nconst Questions = ({ product_id, name }) => {\n  const [allQuestions, setAllQuestions] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [displayedQuestions, setDisplayedQuestions] = useState([]);\n  const [questionCount, setQuestionCount] = useState(0);\n  const [toggleQuestionReload, setToggleQuestionReload] = useState(true);\n  const [toggleAnswerReload, setToggleAnswerReload] = useState(true);\n\n  useEffect(() => {\n    axios.get('http://127.0.0.1:3004/qa/questions', {\n      params: {\n        product_id: product_id,\n        count: 1000\n      }\n    })\n      .then(questions => {\n        const sortedByAnswered = sortingFunctions.sortByAnswered(questions.data.results);\n        setAllQuestions(sortedByAnswered)\n        setQuestions(sortedByAnswered);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }, [product_id, toggleQuestionReload]);\n\n  useEffect(() => {\n    setQuestionCount(4);\n  }, [product_id])\n\n  useEffect(() => {\n    setDisplayedQuestions(questions.slice(0, questionCount))\n  }, [questions, questionCount])\n\n  const handleMoreClick = (event) => {\n    setQuestionCount(questionCount + 2);\n  }\n\n  const handleCollapseClick = (event) => {\n    setQuestionCount(4);\n  }\n\n  const toggleQuestionReloadOnFormSubmit = () => {\n    setToggleQuestionReload(!toggleQuestionReload);\n  }\n\n  const toggleAnswerReloadOnFormSubmit = () => {\n    setToggleAnswerReload(!toggleAnswerReload);\n  }\n\n  const sortQuestionsBySearchTerm = (event) => {\n    if (event.length > 2) {\n      const filteredQuestions = questions.filter(question =>\n        question.question_body.toLowerCase().includes(event.toLowerCase())\n      );\n      setQuestions(filteredQuestions);\n    } else {\n      setQuestions(allQuestions);\n    }\n  }\n\n  return (\n    <Grid>\n      <SearchBarComponent sortQuestionsBySearchTerm={sortQuestionsBySearchTerm} />\n      <Box style={{maxHeight: '75vh', overflow: 'auto'}}>\n        <Grid>\n          {_.map(displayedQuestions, question =>\n            <Grid key={question.question_id}>\n              {question.question_id !== displayedQuestions[0].question_id &&\n                <Box pt={1.5}><Divider variant=\"middle\" /></Box>\n              }\n              <Grid container>\n                <Grid item xs={12} sm={9}>\n                  <Box pt={2}>\n                    <Typography>{<b>Q: {question.question_body}</b>}</Typography>\n                  </Box>\n                  <Box pt={1.5}>\n                    <Answers\n                      toggleAnswerReload={toggleAnswerReload}\n                      question_id={question.question_id}\n                    />\n                  </Box>\n                </Grid>\n                <Grid item xs={12} sm={3}>\n                  <Box>\n                    <HelpfulQuestionHandler\n                      toggleAnswerReloadOnFormSubmit={toggleAnswerReloadOnFormSubmit}\n                      question={question}\n                      name={name}\n                    />\n                  </Box>\n                </Grid>\n              </Grid>\n            </Grid>\n          )}\n        </Grid>\n      </Box>\n        <Box pb={2}>\n          <Grid container direction=\"row\">\n            { questions.length && questions.length !== displayedQuestions.length\n              ? <MoreQuestionsButton text=\"More Answered Questions\" handleClick={handleMoreClick} />\n              : questions.length > 4 &&\n              <MoreQuestionsButton text=\"Collapse Questions\" handleClick={handleCollapseClick} />\n            }\n            <AddQuestion\n              toggleQuestionReloadOnFormSubmit={toggleQuestionReloadOnFormSubmit}\n              product_id={product_id}\n              name={name}\n            />\n          </Grid>\n        </Box>\n    </Grid>\n  )\n}\n\nexport default Questions;"]},"metadata":{},"sourceType":"module"}